using System.Text.Json.Serialization;

namespace CodeHub.Core.Platforms.SooS;

[JsonSerializable(typeof(SoosProjectBranchVulnerability))]
public sealed record SoosProjectBranchVulnerability
{
    [JsonPropertyName("results")]
    public required SoosProjectBranchVulnerabilityResults[] Results { get; init; }

    [JsonPropertyName("paging")]
    public required Paging Paging { get; init; }
}

[JsonSerializable(typeof(SoosProjectBranchVulnerabilityResults))]
public sealed record SoosProjectBranchVulnerabilityResults
{
    [JsonPropertyName("id")]
    public required string Id { get; init; }

    [JsonPropertyName("source")]
    public required string Source { get; init; }

    [JsonPropertyName("scanType")]
    public required string ScanType { get; init; }

    [JsonPropertyName("sourceId")]
    public required string SourceId { get; init; }

    [JsonPropertyName("description")]
    public required string Description { get; init; }

    [JsonPropertyName("caption")]
    public required string Caption { get; init; }

    [JsonPropertyName("severity")]
    public required string Severity { get; init; }

    [JsonPropertyName("status")]
    public required string Status { get; init; }

    [JsonPropertyName("isSuppressionFalsePositive")]
    public required bool IsSuppressionFalsePositive { get; init; }

    [JsonPropertyName("isStatusConfirmed")]
    public required bool IsStatusConfirmed { get; init; }

    [JsonPropertyName("foundOn")]
    public required string FoundOn { get; init; }

    [JsonPropertyName("lastDetected")]
    public required string LastDetected { get; init; }

    [JsonPropertyName("operationType")]
    public required string OperationType { get; init; }

    [JsonPropertyName("ticket")]
    public required object Ticket { get; init; }

    [JsonPropertyName("packages")]
    public required string[] Packages { get; init; }

    [JsonPropertyName("hasFixes")]
    public required bool HasFixes { get; init; }

    [JsonPropertyName("vulnerabilityComplianceDaysRemaining")]
    public required object VulnerabilityComplianceDaysRemaining { get; init; }

    [JsonPropertyName("sourceDetail")]
    public required SoosProjectBranchSourceDetail SourceDetail { get; init; }
};

[JsonSerializable(typeof(SoosProjectBranchSourceDetail))]
public record SoosProjectBranchSourceDetail
{
    [JsonPropertyName("dast")]
    public required object Dast { get; init; }

    [JsonPropertyName("dependencySubstitution")]
    public required object DependencySubstitution { get; init; }

    [JsonPropertyName("dependencyTypo")]
    public required SoosProjectBranchDependencyTypo DependencyTypo { get; init; }

    [JsonPropertyName("iac")]
    public required object Iac { get; init; }

    [JsonPropertyName("sast")]
    public required object Sast { get; init; }

    [JsonPropertyName("unknownPackage")]
    public required object UnknownPackage { get; init; }

    [JsonPropertyName("violation")]
    public required object Violation { get; init; }

    [JsonPropertyName("vulnerability")]
    public required object Vulnerability { get; init; }
}

[JsonSerializable(typeof(SoosProjectBranchDependencyTypo))]
public record SoosProjectBranchDependencyTypo
{
    [JsonPropertyName("typoPackageId")]
    public required string TypoPackageId { get; init; }

    [JsonPropertyName("suggestedPackageId")]
    public required string SuggestedPackageId { get; init; }

    [JsonPropertyName("score")]
    public required double Score { get; init; }
}

[JsonSerializable(typeof(Paging))]
public record Paging
{
    [JsonPropertyName("skip")]
    public required int Skip { get; init; }

    [JsonPropertyName("take")]
    public required int Take { get; init; }

    [JsonPropertyName("moreExist")]
    public required bool MoreExist { get; init; }
}