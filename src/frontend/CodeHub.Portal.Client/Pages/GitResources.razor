@page "/git"
@using CodeHub.Platform.AzureDevOps.Models
@using CodeHub.Portal.Services.Services
@inject IAzureDevOpsHttpClient AzureDevOpsHttpClient

<PageTitle>CodeHub: Git Resources</PageTitle>

<MudContainer MaxWidth="MaxWidth.ExtraExtraLarge">
    <MudText Typo="Typo.h3" GutterBottom="true">Git Resources</MudText>

    @if (_azureDevOpsResources == null)
    {
        <MudProgressCircular Color="Color.Default" Indeterminate="true"/>
    }
    else
    {
        <MudDataGrid Dense="true" T="AzureDevOpsRepository" Items="@_azureDevOpsResources" FilterMode="@DataGridFilterMode.Simple" Filterable="true" FilterCaseSensitivity="@DataGridFilterCaseSensitivity.CaseInsensitive" Virtualize="true" RowsPerPage="20">
            <ToolBarContent>
                <MudText Typo="Typo.h6">Resources</MudText>
            </ToolBarContent>
            <Columns>
                <PropertyColumn Property="x => x.Name" Title="Platform" Filterable="false" Sortable="false">
                    <CellTemplate>
                        <MudIcon Icon="@Icons.Custom.Brands.MicrosoftAzureDevOps"/>
                    </CellTemplate>
                </PropertyColumn>
                <PropertyColumn Property="x => x.Name" Title="Name">
                    <CellTemplate>
                        <MudLink Target="_blank" Href="@(context.Item?.Url.ToString())">@context.Item?.Name</MudLink>
                    </CellTemplate>
                </PropertyColumn>
                <PropertyColumn Property="x => x.DefaultBranch" Title="Default Branch">
                    <CellTemplate>
                        @context.Item?.DefaultBranch
                    </CellTemplate>
                </PropertyColumn>
                <PropertyColumn Property="x => x.Project" Title="Project">
                    <CellTemplate>
                        <MudLink Target="_blank" Href="@(context.Item?.ProjectUrl)">@context.Item?.Project</MudLink>
                    </CellTemplate>
                </PropertyColumn>
                <PropertyColumn Property="x => x.IsDisabled" Title="Disabled?">
                    <CellTemplate>
                        @context.Item?.IsDisabled
                    </CellTemplate>
                </PropertyColumn>
                <PropertyColumn Property="x => x.IsInMaintenance" Title="Maintenance?">
                    <CellTemplate>
                        @context.Item?.IsInMaintenance
                    </CellTemplate>
                </PropertyColumn>
            </Columns>
            <PagerContent>
                <MudDataGridPager T="AzureDevOpsRepository"/>
            </PagerContent>
        </MudDataGrid>
    }


</MudContainer>

@code {
    private List<AzureDevOpsRepository>? _azureDevOpsResources;

    protected override async Task OnInitializedAsync()
    {
        _azureDevOpsResources = await AzureDevOpsHttpClient.GetRepositoriesAsync();
    }

}