@page "/git"
@using CodeHub.Portal.Client.Services
@using Microsoft.TeamFoundation.SourceControl.WebApi
@inject IAzureDevOpsHttpClient AzureDevOpsHttpClient

<PageTitle>CodeHub: Explore</PageTitle>

<MudContainer MaxWidth="MaxWidth.ExtraExtraLarge">
    <MudText Typo="Typo.h3" GutterBottom="true">Git Resources</MudText>

    @if (_azureDevOpsResources == null)
    {
        <MudProgressCircular Color="Color.Default" Indeterminate="true"/>
    }
    else
    {
        <MudDataGrid Dense="true" T="GitRepository" Items="@_azureDevOpsResources" FilterMode="@DataGridFilterMode.Simple" Filterable="true" FilterCaseSensitivity="@DataGridFilterCaseSensitivity.CaseInsensitive" Virtualize="true" RowsPerPage="20">
            <ToolBarContent>
                <MudText Typo="Typo.h6">Resources</MudText>
            </ToolBarContent>
            <Columns>
                <PropertyColumn Property="x => x.Name" Title="Platform" Filterable="false" Sortable="false">
                    <CellTemplate>
                        <MudIcon Icon="@Icons.Custom.Brands.MicrosoftAzureDevOps"/>
                    </CellTemplate>
                </PropertyColumn>
                <PropertyColumn Property="x => x.Name" Title="Name">
                    <CellTemplate>
                        <MudLink Target="_blank" Href="@(context.Item?.WebUrl)">@context.Item?.Name</MudLink>
                    </CellTemplate>
                </PropertyColumn>
                <PropertyColumn Property="x => x.DefaultBranch" Title="Default Branch">
                    <CellTemplate>
                        @context.Item?.DefaultBranch
                    </CellTemplate>
                </PropertyColumn>
                <PropertyColumn Property="x => x.ProjectReference.Name" Title="Project">
                    <CellTemplate>
                        <MudLink Target="_blank" Href="@(context.Item?.ProjectReference.Url)">@context.Item?.ProjectReference.Name</MudLink>
                    </CellTemplate>
                </PropertyColumn>
                <PropertyColumn Property="x => x.IsDisabled" Title="Disabled?">
                    <CellTemplate>
                        @context.Item?.IsDisabled
                    </CellTemplate>
                </PropertyColumn>
                <PropertyColumn Property="x => x.IsInMaintenance" Title="Maintenance?">
                    <CellTemplate>
                        @context.Item?.IsInMaintenance
                    </CellTemplate>
                </PropertyColumn>
            </Columns>
            <PagerContent>
                <MudDataGridPager T="GitRepository"/>
            </PagerContent>
        </MudDataGrid>
    }


</MudContainer>

@code {
    private List<GitRepository>? _azureDevOpsResources;

    protected override async Task OnInitializedAsync()
    {
        _azureDevOpsResources = await AzureDevOpsHttpClient.GetRepositoriesAsync();
    }

}

